#!/bin/bash

# shellcheck source=meta-facebook/recipes-fb/obmc_functions/files/fb-common-functions
source /usr/libexec/fb-common-functions
# shellcheck source=meta-facebook/meta-yosemite5/recipes-phosphor/state/phosphor-state-manager/power-cmd
source /usr/libexec/phosphor-state-manager/power-cmd


currentstate=$(busctl get-property \
    xyz.openbmc_project.State.Host0 \
    /xyz/openbmc_project/state/host0 \
    xyz.openbmc_project.State.Host \
    CurrentHostState | awk '{print $2}' | tr -d '"')

if [ "$currentstate" == "xyz.openbmc_project.State.Host.HostState.TransitioningToRunning" ]; then
    exit 0
fi


active=$(systemctl is-active host-poweron@0.service)
if [ -z "$active" ] || [ "$active" != "inactive" ]; then
    exit 0
fi

active=$(systemctl is-active host-powerreset@0.service)
if [ -z "$active" ] || [ "$active" != "inactive" ]; then
    exit 0
fi

# Sync power status to "On" for abnormal power-on scenarios.

transition=$(busctl get-property \
    xyz.openbmc_project.State.Host0 \
    /xyz/openbmc_project/state/host0 \
    xyz.openbmc_project.State.Host \
    RequestedHostTransition | awk '{print $2}' | tr -d '"')

if [ "$transition" != "xyz.openbmc_project.State.Host.Transition.On" ] && [ "$(power_status)" == "on" ]; then
    busctl set-property xyz.openbmc_project.State.Host0 \
        /xyz/openbmc_project/state/host0 \
        xyz.openbmc_project.State.Host \
        RequestedHostTransition s \
        xyz.openbmc_project.State.Host.Transition.On
fi


exit 0